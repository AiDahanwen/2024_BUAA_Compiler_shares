declare i32 @getint();
declare void @putint(i32);
declare i32 @getchar()
declare void @putch(i32)
declare void @putstr(i8*)



@str_0 = constant [2 x i8] c" \00"



@global_var_0 = dso_local global [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0]
@global_var_1 = dso_local global i32 1



define dso_local i32 @func_func()
{
block_0:
%local_var_0 = load i32, i32* @global_var_1
%local_var_1 = add i32 %local_var_0, 1
store i32 %local_var_1, i32* @global_var_1
%local_var_2 = load i32, i32* @global_var_1
ret i32 %local_var_2

}

define dso_local i32 @main()
{
%local_var_0 = call i32 @func_func()
%local_var_1 = getelementptr inbounds [10 x i32], [10 x i32]* @global_var_0, i32 0, i32 %local_var_0
%local_var_2 = call i32 @func_func()
%local_var_3 = getelementptr inbounds [10 x i32], [10 x i32]* @global_var_0, i32 0, i32 %local_var_2
%local_var_4 = load i32, i32* %local_var_3
store i32 %local_var_4, i32* %local_var_1
%local_var_5 = getelementptr inbounds [10 x i32], [10 x i32]* @global_var_0, i32 0, i32 2
%local_var_6 = load i32, i32* %local_var_5
%local_var_7 = getelementptr inbounds [10 x i32], [10 x i32]* @global_var_0, i32 0, i32 3
%local_var_8 = load i32, i32* %local_var_7
call void @putint(i32 %local_var_6)

call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str_0, i64 0, i64 0))
call void @putint(i32 %local_var_8)

ret i32 0

}

